/*
 * This file is generated by jOOQ.
*/
package lorgNew.tables.records;


import javax.annotation.Generated;

import lorgNew.tables.Permissions;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PermissionsRecord extends UpdatableRecordImpl<PermissionsRecord> implements Record4<Integer, Integer, Integer, Byte> {

    private static final long serialVersionUID = 1619607987;

    /**
     * Setter for <code>lorgNew.permissions.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>lorgNew.permissions.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>lorgNew.permissions.roleid</code>.
     */
    public void setRoleid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>lorgNew.permissions.roleid</code>.
     */
    public Integer getRoleid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>lorgNew.permissions.routeid</code>.
     */
    public void setRouteid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>lorgNew.permissions.routeid</code>.
     */
    public Integer getRouteid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>lorgNew.permissions.permit</code>.
     */
    public void setPermit(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>lorgNew.permissions.permit</code>.
     */
    public Byte getPermit() {
        return (Byte) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Byte> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Byte> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Permissions.PERMISSIONS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Permissions.PERMISSIONS.ROLEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Permissions.PERMISSIONS.ROUTEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return Permissions.PERMISSIONS.PERMIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getRoleid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getRouteid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getPermit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getRoleid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getRouteid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getPermit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord value2(Integer value) {
        setRoleid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord value3(Integer value) {
        setRouteid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord value4(Byte value) {
        setPermit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionsRecord values(Integer value1, Integer value2, Integer value3, Byte value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PermissionsRecord
     */
    public PermissionsRecord() {
        super(Permissions.PERMISSIONS);
    }

    /**
     * Create a detached, initialised PermissionsRecord
     */
    public PermissionsRecord(Integer id, Integer roleid, Integer routeid, Byte permit) {
        super(Permissions.PERMISSIONS);

        set(0, id);
        set(1, roleid);
        set(2, routeid);
        set(3, permit);
    }
}
