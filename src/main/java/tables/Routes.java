/*
 * This file is generated by jOOQ.
*/
package lorgNew.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lorgNew.Indexes;
import lorgNew.Keys;
import lorgNew.Lorgnew;
import lorgNew.tables.records.RoutesRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routes extends TableImpl<RoutesRecord> {

    private static final long serialVersionUID = -1419993328;

    /**
     * The reference instance of <code>lorgNew.routes</code>
     */
    public static final Routes ROUTES = new Routes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoutesRecord> getRecordType() {
        return RoutesRecord.class;
    }

    /**
     * The column <code>lorgNew.routes.id</code>.
     */
    public final TableField<RoutesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>lorgNew.routes.route</code>.
     */
    public final TableField<RoutesRecord, String> ROUTE = createField("route", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lorgNew.routes.title</code>.
     */
    public final TableField<RoutesRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>lorgNew.routes</code> table reference
     */
    public Routes() {
        this(DSL.name("routes"), null);
    }

    /**
     * Create an aliased <code>lorgNew.routes</code> table reference
     */
    public Routes(String alias) {
        this(DSL.name(alias), ROUTES);
    }

    /**
     * Create an aliased <code>lorgNew.routes</code> table reference
     */
    public Routes(Name alias) {
        this(alias, ROUTES);
    }

    private Routes(Name alias, Table<RoutesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Routes(Name alias, Table<RoutesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorgnew.LORGNEW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ROUTES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RoutesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ROUTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoutesRecord> getPrimaryKey() {
        return Keys.KEY_ROUTES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoutesRecord>> getKeys() {
        return Arrays.<UniqueKey<RoutesRecord>>asList(Keys.KEY_ROUTES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Routes as(String alias) {
        return new Routes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Routes as(Name alias) {
        return new Routes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Routes rename(String name) {
        return new Routes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Routes rename(Name name) {
        return new Routes(name, null);
    }
}
