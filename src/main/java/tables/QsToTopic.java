/*
 * This file is generated by jOOQ.
*/
package lorgNew.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lorgNew.Indexes;
import lorgNew.Keys;
import lorgNew.Lorgnew;
import lorgNew.tables.records.QsToTopicRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QsToTopic extends TableImpl<QsToTopicRecord> {

    private static final long serialVersionUID = 669362882;

    /**
     * The reference instance of <code>lorgNew.qs_to_topic</code>
     */
    public static final QsToTopic QS_TO_TOPIC = new QsToTopic();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QsToTopicRecord> getRecordType() {
        return QsToTopicRecord.class;
    }

    /**
     * The column <code>lorgNew.qs_to_topic.id</code>.
     */
    public final TableField<QsToTopicRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>lorgNew.qs_to_topic.tpid</code>.
     */
    public final TableField<QsToTopicRecord, Integer> TPID = createField("tpid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>lorgNew.qs_to_topic.qsid</code>.
     */
    public final TableField<QsToTopicRecord, Integer> QSID = createField("qsid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>lorgNew.qs_to_topic</code> table reference
     */
    public QsToTopic() {
        this(DSL.name("qs_to_topic"), null);
    }

    /**
     * Create an aliased <code>lorgNew.qs_to_topic</code> table reference
     */
    public QsToTopic(String alias) {
        this(DSL.name(alias), QS_TO_TOPIC);
    }

    /**
     * Create an aliased <code>lorgNew.qs_to_topic</code> table reference
     */
    public QsToTopic(Name alias) {
        this(alias, QS_TO_TOPIC);
    }

    private QsToTopic(Name alias, Table<QsToTopicRecord> aliased) {
        this(alias, aliased, null);
    }

    private QsToTopic(Name alias, Table<QsToTopicRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorgnew.LORGNEW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QS_TO_TOPIC_IDX_17E0BCA15A90BB43, Indexes.QS_TO_TOPIC_IDX_17E0BCA16F08F528, Indexes.QS_TO_TOPIC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QsToTopicRecord, Integer> getIdentity() {
        return Keys.IDENTITY_QS_TO_TOPIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QsToTopicRecord> getPrimaryKey() {
        return Keys.KEY_QS_TO_TOPIC_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QsToTopicRecord>> getKeys() {
        return Arrays.<UniqueKey<QsToTopicRecord>>asList(Keys.KEY_QS_TO_TOPIC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QsToTopic as(String alias) {
        return new QsToTopic(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QsToTopic as(Name alias) {
        return new QsToTopic(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QsToTopic rename(String name) {
        return new QsToTopic(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QsToTopic rename(Name name) {
        return new QsToTopic(name, null);
    }
}
