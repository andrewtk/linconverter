/*
 * This file is generated by jOOQ.
*/
package lorgNew.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import lorgNew.tables.Roles;
import lorgNew.tables.records.RolesRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolesDao extends DAOImpl<RolesRecord, lorgNew.tables.pojos.Roles, Integer> {

    /**
     * Create a new RolesDao without any configuration
     */
    public RolesDao() {
        super(Roles.ROLES, lorgNew.tables.pojos.Roles.class);
    }

    /**
     * Create a new RolesDao with an attached configuration
     */
    public RolesDao(Configuration configuration) {
        super(Roles.ROLES, lorgNew.tables.pojos.Roles.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(lorgNew.tables.pojos.Roles object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Roles> fetchById(Integer... values) {
        return fetch(Roles.ROLES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public lorgNew.tables.pojos.Roles fetchOneById(Integer value) {
        return fetchOne(Roles.ROLES.ID, value);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Roles> fetchByRole(String... values) {
        return fetch(Roles.ROLES.ROLE, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Roles> fetchByTitle(String... values) {
        return fetch(Roles.ROLES.TITLE, values);
    }
}
