/*
 * This file is generated by jOOQ.
*/
package lorgNew.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import lorgNew.tables.Messages;
import lorgNew.tables.records.MessagesRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessagesDao extends DAOImpl<MessagesRecord, lorgNew.tables.pojos.Messages, Integer> {

    /**
     * Create a new MessagesDao without any configuration
     */
    public MessagesDao() {
        super(Messages.MESSAGES, lorgNew.tables.pojos.Messages.class);
    }

    /**
     * Create a new MessagesDao with an attached configuration
     */
    public MessagesDao(Configuration configuration) {
        super(Messages.MESSAGES, lorgNew.tables.pojos.Messages.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(lorgNew.tables.pojos.Messages object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Messages> fetchById(Integer... values) {
        return fetch(Messages.MESSAGES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public lorgNew.tables.pojos.Messages fetchOneById(Integer value) {
        return fetchOne(Messages.MESSAGES.ID, value);
    }

    /**
     * Fetch records that have <code>user_from IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Messages> fetchByUserFrom(Integer... values) {
        return fetch(Messages.MESSAGES.USER_FROM, values);
    }

    /**
     * Fetch records that have <code>user_to IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Messages> fetchByUserTo(Integer... values) {
        return fetch(Messages.MESSAGES.USER_TO, values);
    }

    /**
     * Fetch records that have <code>message IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Messages> fetchByMessage(String... values) {
        return fetch(Messages.MESSAGES.MESSAGE, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Messages> fetchByTitle(String... values) {
        return fetch(Messages.MESSAGES.TITLE, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Messages> fetchByStatus(String... values) {
        return fetch(Messages.MESSAGES.STATUS, values);
    }

    /**
     * Fetch records that have <code>is_new IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Messages> fetchByIsNew(Byte... values) {
        return fetch(Messages.MESSAGES.IS_NEW, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Messages> fetchByCreated(Timestamp... values) {
        return fetch(Messages.MESSAGES.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Messages> fetchByUpdated(Timestamp... values) {
        return fetch(Messages.MESSAGES.UPDATED, values);
    }
}
