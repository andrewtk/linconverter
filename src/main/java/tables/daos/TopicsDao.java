/*
 * This file is generated by jOOQ.
*/
package lorgNew.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import lorgNew.tables.Topics;
import lorgNew.tables.records.TopicsRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TopicsDao extends DAOImpl<TopicsRecord, lorgNew.tables.pojos.Topics, Integer> {

    /**
     * Create a new TopicsDao without any configuration
     */
    public TopicsDao() {
        super(Topics.TOPICS, lorgNew.tables.pojos.Topics.class);
    }

    /**
     * Create a new TopicsDao with an attached configuration
     */
    public TopicsDao(Configuration configuration) {
        super(Topics.TOPICS, lorgNew.tables.pojos.Topics.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(lorgNew.tables.pojos.Topics object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Topics> fetchById(Integer... values) {
        return fetch(Topics.TOPICS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public lorgNew.tables.pojos.Topics fetchOneById(Integer value) {
        return fetchOne(Topics.TOPICS.ID, value);
    }

    /**
     * Fetch records that have <code>topic IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Topics> fetchByTopic(String... values) {
        return fetch(Topics.TOPICS.TOPIC, values);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Topics> fetchByContent(String... values) {
        return fetch(Topics.TOPICS.CONTENT, values);
    }

    /**
     * Fetch records that have <code>slug IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Topics> fetchBySlug(String... values) {
        return fetch(Topics.TOPICS.SLUG, values);
    }

    /**
     * Fetch a unique record that has <code>slug = value</code>
     */
    public lorgNew.tables.pojos.Topics fetchOneBySlug(String value) {
        return fetchOne(Topics.TOPICS.SLUG, value);
    }

    /**
     * Fetch records that have <code>cropic IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Topics> fetchByCropic(String... values) {
        return fetch(Topics.TOPICS.CROPIC, values);
    }

    /**
     * Fetch records that have <code>segment IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Topics> fetchBySegment(String... values) {
        return fetch(Topics.TOPICS.SEGMENT, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Topics> fetchByStatus(String... values) {
        return fetch(Topics.TOPICS.STATUS, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Topics> fetchByCreated(Timestamp... values) {
        return fetch(Topics.TOPICS.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<lorgNew.tables.pojos.Topics> fetchByUpdated(Timestamp... values) {
        return fetch(Topics.TOPICS.UPDATED, values);
    }
}
