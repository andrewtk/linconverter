/*
 * This file is generated by jOOQ.
*/
package lorgNew.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import lorgNew.tables.UserProfile;
import lorgNew.tables.records.UserProfileRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserProfileDao extends DAOImpl<UserProfileRecord, lorgNew.tables.pojos.UserProfile, Integer> {

    /**
     * Create a new UserProfileDao without any configuration
     */
    public UserProfileDao() {
        super(UserProfile.USER_PROFILE, lorgNew.tables.pojos.UserProfile.class);
    }

    /**
     * Create a new UserProfileDao with an attached configuration
     */
    public UserProfileDao(Configuration configuration) {
        super(UserProfile.USER_PROFILE, lorgNew.tables.pojos.UserProfile.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(lorgNew.tables.pojos.UserProfile object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchById(Integer... values) {
        return fetch(UserProfile.USER_PROFILE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public lorgNew.tables.pojos.UserProfile fetchOneById(Integer value) {
        return fetchOne(UserProfile.USER_PROFILE.ID, value);
    }

    /**
     * Fetch records that have <code>userid IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchByUserid(Integer... values) {
        return fetch(UserProfile.USER_PROFILE.USERID, values);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchByUsername(String... values) {
        return fetch(UserProfile.USER_PROFILE.USERNAME, values);
    }

    /**
     * Fetch records that have <code>fullname IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchByFullname(String... values) {
        return fetch(UserProfile.USER_PROFILE.FULLNAME, values);
    }

    /**
     * Fetch records that have <code>location IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchByLocation(String... values) {
        return fetch(UserProfile.USER_PROFILE.LOCATION, values);
    }

    /**
     * Fetch records that have <code>website IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchByWebsite(String... values) {
        return fetch(UserProfile.USER_PROFILE.WEBSITE, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchByEmail(String... values) {
        return fetch(UserProfile.USER_PROFILE.EMAIL, values);
    }

    /**
     * Fetch records that have <code>business_status IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchByBusinessStatus(String... values) {
        return fetch(UserProfile.USER_PROFILE.BUSINESS_STATUS, values);
    }

    /**
     * Fetch records that have <code>bonus_points IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchByBonusPoints(String... values) {
        return fetch(UserProfile.USER_PROFILE.BONUS_POINTS, values);
    }

    /**
     * Fetch records that have <code>about IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchByAbout(String... values) {
        return fetch(UserProfile.USER_PROFILE.ABOUT, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchByCreated(Timestamp... values) {
        return fetch(UserProfile.USER_PROFILE.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<lorgNew.tables.pojos.UserProfile> fetchByUpdated(Timestamp... values) {
        return fetch(UserProfile.USER_PROFILE.UPDATED, values);
    }
}
