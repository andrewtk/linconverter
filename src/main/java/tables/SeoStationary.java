/*
 * This file is generated by jOOQ.
*/
package lorgNew.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lorgNew.Indexes;
import lorgNew.Keys;
import lorgNew.Lorgnew;
import lorgNew.tables.records.SeoStationaryRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeoStationary extends TableImpl<SeoStationaryRecord> {

    private static final long serialVersionUID = -673372588;

    /**
     * The reference instance of <code>lorgNew.seo_stationary</code>
     */
    public static final SeoStationary SEO_STATIONARY = new SeoStationary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeoStationaryRecord> getRecordType() {
        return SeoStationaryRecord.class;
    }

    /**
     * The column <code>lorgNew.seo_stationary.id</code>.
     */
    public final TableField<SeoStationaryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>lorgNew.seo_stationary.page</code>.
     */
    public final TableField<SeoStationaryRecord, String> PAGE = createField("page", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lorgNew.seo_stationary.title</code>.
     */
    public final TableField<SeoStationaryRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lorgNew.seo_stationary.description</code>.
     */
    public final TableField<SeoStationaryRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lorgNew.seo_stationary.segment</code>.
     */
    public final TableField<SeoStationaryRecord, String> SEGMENT = createField("segment", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lorgNew.seo_stationary.hrefland_default_location</code>.
     */
    public final TableField<SeoStationaryRecord, String> HREFLAND_DEFAULT_LOCATION = createField("hrefland_default_location", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lorgNew.seo_stationary.hrefland_for_english</code>.
     */
    public final TableField<SeoStationaryRecord, String> HREFLAND_FOR_ENGLISH = createField("hrefland_for_english", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lorgNew.seo_stationary.hrefland_for_spanish</code>.
     */
    public final TableField<SeoStationaryRecord, String> HREFLAND_FOR_SPANISH = createField("hrefland_for_spanish", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lorgNew.seo_stationary.hrefland_for_korean</code>.
     */
    public final TableField<SeoStationaryRecord, String> HREFLAND_FOR_KOREAN = createField("hrefland_for_korean", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lorgNew.seo_stationary.hrefland_for_japanese</code>.
     */
    public final TableField<SeoStationaryRecord, String> HREFLAND_FOR_JAPANESE = createField("hrefland_for_japanese", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>lorgNew.seo_stationary</code> table reference
     */
    public SeoStationary() {
        this(DSL.name("seo_stationary"), null);
    }

    /**
     * Create an aliased <code>lorgNew.seo_stationary</code> table reference
     */
    public SeoStationary(String alias) {
        this(DSL.name(alias), SEO_STATIONARY);
    }

    /**
     * Create an aliased <code>lorgNew.seo_stationary</code> table reference
     */
    public SeoStationary(Name alias) {
        this(alias, SEO_STATIONARY);
    }

    private SeoStationary(Name alias, Table<SeoStationaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private SeoStationary(Name alias, Table<SeoStationaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorgnew.LORGNEW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SEO_STATIONARY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SeoStationaryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SEO_STATIONARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SeoStationaryRecord> getPrimaryKey() {
        return Keys.KEY_SEO_STATIONARY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SeoStationaryRecord>> getKeys() {
        return Arrays.<UniqueKey<SeoStationaryRecord>>asList(Keys.KEY_SEO_STATIONARY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeoStationary as(String alias) {
        return new SeoStationary(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeoStationary as(Name alias) {
        return new SeoStationary(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SeoStationary rename(String name) {
        return new SeoStationary(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SeoStationary rename(Name name) {
        return new SeoStationary(name, null);
    }
}
