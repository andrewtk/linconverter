/*
 * This file is generated by jOOQ.
*/
package lorgNew.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lorgNew.Indexes;
import lorgNew.Keys;
import lorgNew.Lorgnew;
import lorgNew.tables.records.FosUserRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FosUser extends TableImpl<FosUserRecord> {

    private static final long serialVersionUID = 1306914722;

    /**
     * The reference instance of <code>lorgNew.fos_user</code>
     */
    public static final FosUser FOS_USER = new FosUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FosUserRecord> getRecordType() {
        return FosUserRecord.class;
    }

    /**
     * The column <code>lorgNew.fos_user.id</code>.
     */
    public final TableField<FosUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>lorgNew.fos_user.username</code>.
     */
    public final TableField<FosUserRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(180).nullable(false), this, "");

    /**
     * The column <code>lorgNew.fos_user.username_canonical</code>.
     */
    public final TableField<FosUserRecord, String> USERNAME_CANONICAL = createField("username_canonical", org.jooq.impl.SQLDataType.VARCHAR(180).nullable(false), this, "");

    /**
     * The column <code>lorgNew.fos_user.email</code>.
     */
    public final TableField<FosUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(180).nullable(false), this, "");

    /**
     * The column <code>lorgNew.fos_user.email_canonical</code>.
     */
    public final TableField<FosUserRecord, String> EMAIL_CANONICAL = createField("email_canonical", org.jooq.impl.SQLDataType.VARCHAR(180).nullable(false), this, "");

    /**
     * The column <code>lorgNew.fos_user.enabled</code>.
     */
    public final TableField<FosUserRecord, Byte> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>lorgNew.fos_user.salt</code>.
     */
    public final TableField<FosUserRecord, String> SALT = createField("salt", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>lorgNew.fos_user.password</code>.
     */
    public final TableField<FosUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>lorgNew.fos_user.last_login</code>.
     */
    public final TableField<FosUserRecord, Timestamp> LAST_LOGIN = createField("last_login", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>lorgNew.fos_user.confirmation_token</code>.
     */
    public final TableField<FosUserRecord, String> CONFIRMATION_TOKEN = createField("confirmation_token", org.jooq.impl.SQLDataType.VARCHAR(180), this, "");

    /**
     * The column <code>lorgNew.fos_user.password_requested_at</code>.
     */
    public final TableField<FosUserRecord, Timestamp> PASSWORD_REQUESTED_AT = createField("password_requested_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>lorgNew.fos_user.roles</code>. (DC2Type:array)
     */
    public final TableField<FosUserRecord, String> ROLES = createField("roles", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "(DC2Type:array)");

    /**
     * The column <code>lorgNew.fos_user.userid</code>.
     */
    public final TableField<FosUserRecord, Integer> USERID = createField("userid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lorgNew.fos_user.owner_id</code>.
     */
    public final TableField<FosUserRecord, Integer> OWNER_ID = createField("owner_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>lorgNew.fos_user.is_owner</code>.
     */
    public final TableField<FosUserRecord, Byte> IS_OWNER = createField("is_owner", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>lorgNew.fos_user.localize</code>.
     */
    public final TableField<FosUserRecord, String> LOCALIZE = createField("localize", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lorgNew.fos_user.slug</code>.
     */
    public final TableField<FosUserRecord, String> SLUG = createField("slug", org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false), this, "");

    /**
     * The column <code>lorgNew.fos_user.status</code>.
     */
    public final TableField<FosUserRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>lorgNew.fos_user.cropic</code>.
     */
    public final TableField<FosUserRecord, String> CROPIC = createField("cropic", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lorgNew.fos_user.logo_url</code>.
     */
    public final TableField<FosUserRecord, String> LOGO_URL = createField("logo_url", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>lorgNew.fos_user</code> table reference
     */
    public FosUser() {
        this(DSL.name("fos_user"), null);
    }

    /**
     * Create an aliased <code>lorgNew.fos_user</code> table reference
     */
    public FosUser(String alias) {
        this(DSL.name(alias), FOS_USER);
    }

    /**
     * Create an aliased <code>lorgNew.fos_user</code> table reference
     */
    public FosUser(Name alias) {
        this(alias, FOS_USER);
    }

    private FosUser(Name alias, Table<FosUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private FosUser(Name alias, Table<FosUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorgnew.LORGNEW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FOS_USER_PRIMARY, Indexes.FOS_USER_UNIQ_957A647992FC23A8, Indexes.FOS_USER_UNIQ_957A6479989D9B62, Indexes.FOS_USER_UNIQ_957A6479A0D96FBF, Indexes.FOS_USER_UNIQ_957A6479C05FB297);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FosUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FOS_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FosUserRecord> getPrimaryKey() {
        return Keys.KEY_FOS_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FosUserRecord>> getKeys() {
        return Arrays.<UniqueKey<FosUserRecord>>asList(Keys.KEY_FOS_USER_PRIMARY, Keys.KEY_FOS_USER_UNIQ_957A647992FC23A8, Keys.KEY_FOS_USER_UNIQ_957A6479A0D96FBF, Keys.KEY_FOS_USER_UNIQ_957A6479C05FB297, Keys.KEY_FOS_USER_UNIQ_957A6479989D9B62);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FosUser as(String alias) {
        return new FosUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FosUser as(Name alias) {
        return new FosUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FosUser rename(String name) {
        return new FosUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FosUser rename(Name name) {
        return new FosUser(name, null);
    }
}
