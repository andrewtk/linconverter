/*
 * This file is generated by jOOQ.
*/
package lorgNew.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lorgNew.Indexes;
import lorgNew.Keys;
import lorgNew.Lorgnew;
import lorgNew.tables.records.UserProfileRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserProfile extends TableImpl<UserProfileRecord> {

    private static final long serialVersionUID = 1955100153;

    /**
     * The reference instance of <code>lorgNew.user_profile</code>
     */
    public static final UserProfile USER_PROFILE = new UserProfile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserProfileRecord> getRecordType() {
        return UserProfileRecord.class;
    }

    /**
     * The column <code>lorgNew.user_profile.id</code>.
     */
    public final TableField<UserProfileRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>lorgNew.user_profile.userid</code>.
     */
    public final TableField<UserProfileRecord, Integer> USERID = createField("userid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>lorgNew.user_profile.username</code>.
     */
    public final TableField<UserProfileRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>lorgNew.user_profile.fullname</code>.
     */
    public final TableField<UserProfileRecord, String> FULLNAME = createField("fullname", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>lorgNew.user_profile.location</code>.
     */
    public final TableField<UserProfileRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>lorgNew.user_profile.website</code>.
     */
    public final TableField<UserProfileRecord, String> WEBSITE = createField("website", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>lorgNew.user_profile.email</code>.
     */
    public final TableField<UserProfileRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>lorgNew.user_profile.business_status</code>.
     */
    public final TableField<UserProfileRecord, String> BUSINESS_STATUS = createField("business_status", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>lorgNew.user_profile.bonus_points</code>.
     */
    public final TableField<UserProfileRecord, String> BONUS_POINTS = createField("bonus_points", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>lorgNew.user_profile.about</code>.
     */
    public final TableField<UserProfileRecord, String> ABOUT = createField("about", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>lorgNew.user_profile.created</code>.
     */
    public final TableField<UserProfileRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>lorgNew.user_profile.updated</code>.
     */
    public final TableField<UserProfileRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>lorgNew.user_profile</code> table reference
     */
    public UserProfile() {
        this(DSL.name("user_profile"), null);
    }

    /**
     * Create an aliased <code>lorgNew.user_profile</code> table reference
     */
    public UserProfile(String alias) {
        this(DSL.name(alias), USER_PROFILE);
    }

    /**
     * Create an aliased <code>lorgNew.user_profile</code> table reference
     */
    public UserProfile(Name alias) {
        this(alias, USER_PROFILE);
    }

    private UserProfile(Name alias, Table<UserProfileRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserProfile(Name alias, Table<UserProfileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorgnew.LORGNEW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_PROFILE_IDX_D95AB405F132696E, Indexes.USER_PROFILE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserProfileRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_PROFILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserProfileRecord> getPrimaryKey() {
        return Keys.KEY_USER_PROFILE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserProfileRecord>> getKeys() {
        return Arrays.<UniqueKey<UserProfileRecord>>asList(Keys.KEY_USER_PROFILE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserProfile as(String alias) {
        return new UserProfile(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserProfile as(Name alias) {
        return new UserProfile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserProfile rename(String name) {
        return new UserProfile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserProfile rename(Name name) {
        return new UserProfile(name, null);
    }
}
